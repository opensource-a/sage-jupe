import boto3
import os

s3_client = boto3.client('s3')



def download_dir(bucketnprefix, suffix, local, client=s3_client):
    """
    params:
    - prefix: pattern to match in s3
    - suffix: extension to download
    - local: local path to folder in which to place files
    - bucket: s3 bucket with target contents
    - client: initialized s3 client object
    """
    keys = []
    dirs = []
    next_token = ''
    splitbucketnprefix = bucketnprefix.split('/')
    bucket = splitbucketnprefix[0]
    splitbucketnprefix.pop(0)
    #print(splitbucketnprefix)
    prefix = "/".join(splitbucketnprefix)
    print(prefix)
    base_kwargs = {
        
        'Bucket':bucket,
        'Prefix':prefix,
    }
    while next_token is not None:
        kwargs = base_kwargs.copy()
        if next_token != '':
            kwargs.update({'ContinuationToken': next_token})
        results = client.list_objects_v2(**kwargs)
        contents = results.get('Contents')
        for i in contents:
            k = i.get('Key')
            if k[-1] != '/' and k.endswith(suffix):
                keys.append(k)
            elif k[-1] == '/':
                dirs.append(k)
        next_token = results.get('NextContinuationToken')
    print(keys)
    print(dirs)
    print(local)
    os.makedirs(local, exist_ok=True)
    for k in keys:
        dest_pathname = os.path.join(local, k)
        filename = os.path.basename(dest_pathname)
        client.download_file(bucket, k, local+"/"+filename)
        
download_dir('bucketname/prefix1/prefix2','suffix','localdir') 
